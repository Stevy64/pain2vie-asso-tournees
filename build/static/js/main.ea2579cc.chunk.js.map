{"version":3,"sources":["firebase.js","services/tournee.service.js","components/add-tournee.component.js","components/tournee.component.js","components/tournees-list.component.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","collection","TourneeService","getAll","create","data","add","update","id","value","doc","remove","delete","AddTournee","initialTourneeState","ville","date","poids","total","benevoles","remarques","published","useState","tournee","setTournee","submitted","setSubmitted","handleInputChange","event","target","name","className","onClick","htmlFor","type","required","onChange","placeholder","rows","Moment","format","TourneeDataService","then","catch","e","console","log","Tournee","props","onChangeVille","bind","onChangePoids","onChangeTotal","onChangeRemarques","onChangeBenevoles","updatePublished","updateTournee","deleteTournee","state","currentTournee","message","this","setState","prevState","status","refreshList","role","aria-label","nextProps","Component","TourneesList","setActiveTournee","onDataChange","tournees","currentIndex","unsubscribe","undefined","orderBy","onSnapshot","items","forEach","item","push","index","map","App","href","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ea2579cc.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nlet config = {\r\n    apiKey: \"AIzaSyBsFqHJr-NR_FN-VbSF_AiJscIilQqM13g\",\r\n    authDomain: \"pain2viedata.firebaseapp.com\",\r\n    databaseURL: \"https://pain2viedata-default-rtdb.firebaseio.com\",\r\n    projectId: \"pain2viedata\",\r\n    storageBucket: \"pain2viedata.appspot.com\",\r\n    messagingSenderId: \"21075538993\",\r\n    appId: \"1:21075538993:web:0cea75167a53e3b2b1d110\",\r\n    measurementId: \"G-6MYBBPZMVK\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase.firestore();","import firebase from \"../firebase\";\r\n\r\nconst db = firebase.collection(\"/tournees\");\r\n\r\nconst getAll = () => {\r\n  return db;\r\n};\r\n\r\nconst create = (data) => {\r\n  return db.add(data);\r\n};\r\n\r\nconst update = (id, value) => {\r\n  return db.doc(id).update(value);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return db.doc(id).delete();\r\n};\r\n\r\nconst TourneeService = {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove\r\n};\r\n\r\nexport default TourneeService;","import React, { useState } from \"react\";\r\nimport TourneeDataService from \"../services/tournee.service\";\r\nimport Moment from 'moment';\r\nimport 'moment/locale/fr';\r\n\r\nconst AddTournee = () => {\r\n  const initialTourneeState = {\r\n    ville: \"\",\r\n    date: \"--\",\r\n    poids: \"\",\r\n    total: 0,\r\n    benevoles: \"\",\r\n    remarques: \"\",\r\n    published: false\r\n  };\r\n  const [tournee, setTournee] = useState(initialTourneeState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setTournee({ ...tournee, [name]: value });\r\n  };\r\n\r\n  const saveTournee = () => {\r\n    var data = {\r\n      ville: tournee.ville,\r\n      date: Moment().format(\"dddd Do/MM/YY HH:mm\"),\r\n      poids: tournee.poids,\r\n      total: tournee.total,\r\n      benevoles: tournee.benevoles,\r\n      remarques: tournee.remarques,\r\n      published: false\r\n    };\r\n\r\n    TourneeDataService.create(data)\r\n      .then(() => {\r\n        setSubmitted(true);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const newTournee = () => {\r\n    setTournee(initialTourneeState);\r\n    setSubmitted(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"submit-form\">\r\n      {submitted ? (\r\n        <div>\r\n          <h4>Informations enrégistrées avec succès!</h4>\r\n          <button className=\"btn btn-success\" onClick={newTournee}>\r\n            Ajouter\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"ville\">Ville</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"ville\"\r\n              required\r\n              value={tournee.ville}\r\n              onChange={handleInputChange}\r\n              name=\"ville\"\r\n              placeholder=\"Super U Mareil\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"poids\">Poids des bacs</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"poids\"\r\n              required\r\n              value={tournee.poids}\r\n              onChange={handleInputChange}\r\n              name=\"poids\"\r\n              placeholder=\"9.5 + 15 + 20.1\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"total\">Total</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"total\"\r\n              required\r\n              value={tournee.total}\r\n              onChange={handleInputChange}\r\n              name=\"total\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"benevoles\">Noms des bénévoles</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"benevoles\"\r\n              required\r\n              value={tournee.benevoles}\r\n              onChange={handleInputChange}\r\n              name=\"benevoles\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"remarques\">Autres infos</label>\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"remarques\"\r\n              required\r\n              value={tournee.remarques}\r\n              onChange={handleInputChange}\r\n              name=\"remarques\"\r\n              rows=\"3\"\r\n              placeholder=\"ex: 1 bac laissé à Mareil\"\r\n            ></textarea>\r\n          </div>\r\n\r\n          <button onClick={saveTournee} className=\"btn btn-success\">\r\n            Enregistrer\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTournee;","import React, { Component } from \"react\";\r\nimport TourneeDataService from \"../services/tournee.service\";\r\nimport Moment from 'moment';\r\nimport 'moment/locale/fr';\r\n\r\nexport default class Tournee extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeVille = this.onChangeVille.bind(this);\r\n    this.onChangePoids = this.onChangePoids.bind(this);\r\n    this.onChangeTotal = this.onChangeTotal.bind(this);\r\n    this.onChangeRemarques = this.onChangeRemarques.bind(this);\r\n    this.onChangeBenevoles = this.onChangeBenevoles.bind(this);\r\n    this.updatePublished = this.updatePublished.bind(this);\r\n    this.updateTournee = this.updateTournee.bind(this);\r\n    this.deleteTournee = this.deleteTournee.bind(this);\r\n\r\n    this.state = {\r\n      currentTournee: {\r\n        id: null,\r\n        date: Moment().format(\"dddd Do/MM/YYYY HH:mm\"),\r\n        ville: \"\",\r\n        poids: \"\",\r\n        total: 0,\r\n        benevoles: \"\",\r\n        remarques: \"\",\r\n        published: false,\r\n      },\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const { tournee } = nextProps;\r\n    if (prevState.currentTournee.id !== tournee.id) {\r\n      return {\r\n        currentTournee: tournee,\r\n        message: \"\"\r\n      };\r\n    }\r\n\r\n    return prevState.currentTournee;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      currentTournee: this.props.tournee,\r\n    });\r\n  }\r\n\r\n  onChangeVille(e) {\r\n    const ville = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentTournee: {\r\n          ...prevState.currentTournee,\r\n          ville: ville,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangePoids(e) {\r\n    const poids = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentTournee: {\r\n          ...prevState.currentTournee,\r\n          poids: poids,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeTotal(e) {\r\n    const total = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentTournee: {\r\n          ...prevState.currentTournee,\r\n          total: total,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeRemarques(e) {\r\n    const remarques = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentTournee: {\r\n          ...prevState.currentTournee,\r\n          remarques: remarques,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeBenevoles(e) {\r\n    const benevoles = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentTournee: {\r\n          ...prevState.currentTournee,\r\n          benevoles: benevoles,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  updatePublished(status) {\r\n    TourneeDataService.update(this.state.currentTournee.id, {\r\n      published: status,\r\n    })\r\n      .then(() => {\r\n        this.setState((prevState) => ({\r\n          currentTournee: {\r\n            ...prevState.currentTournee,\r\n            published: status,\r\n          },\r\n          message: \"Veuillez enrégistrer vos modifications\",\r\n        }));\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateTournee() {\r\n    const data = {\r\n      ville: this.state.currentTournee.ville,\r\n      poids: this.state.currentTournee.poids,\r\n      total: this.state.currentTournee.total,\r\n      remarques: this.state.currentTournee.remarques,\r\n      benevoles: this.state.currentTournee.benevoles,\r\n      date: this.state.currentTournee.date,\r\n    };\r\n\r\n    TourneeDataService.update(this.state.currentTournee.id, data)\r\n      .then(() => {\r\n        this.setState({\r\n          message: \"Veuillez enregistrer vos modifications\",\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteTournee() {\r\n    TourneeDataService.remove(this.state.currentTournee.id)\r\n      .then(() => {\r\n        this.props.refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentTournee } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h4>Tournée du {currentTournee.date}</h4>\r\n        {currentTournee ? (\r\n          <div className=\"edit-form\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"ville\">Ville</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"ville\"\r\n                  value={currentTournee.ville}\r\n                  onChange={this.onChangeVille}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"poids\">Poids</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"poids\"\r\n                  value={currentTournee.poids}\r\n                  onChange={this.onChangePoids}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"total\">Total</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"total\"\r\n                  value={currentTournee.total}\r\n                  onChange={this.onChangeTotal}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"benevoles\">Benevoles</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"benevoles\"\r\n                  value={currentTournee.benevoles}\r\n                  onChange={this.onChangeBenevoles}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"remarques\">Autres infos</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"remarques\"\r\n                  value={currentTournee.remarques}\r\n                  onChange={this.onChangeRemarques}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Status :</strong>\r\n                </label>\r\n                {currentTournee.published ? \" En attente..\" : \" Enregistré\"}\r\n              </div>\r\n            </form>\r\n\r\n            <div className=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n              <div className=\"btn-group\" role=\"group\" aria-label=\"First group\">\r\n                <button type=\"button\" className=\"btn btn-secondary btn-danger\">o</button>\r\n                <button className=\"btn btn-outline-danger\" onClick={this.deleteTournee}>\r\n                  Supprimer\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"btn-group\" role=\"group\" aria-label=\"Second group\">\r\n              <button type=\"button\" className=\"btn btn-secondary btn-success\">o</button>\r\n                {currentTournee.published ? (\r\n                <button\r\n                  className=\"btn btn-outline-success\"\r\n                  onClick={() => this.updatePublished(false)}>\r\n                  Enregistrer\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"btn btn-outline-primary\"\r\n                  onClick={() => this.updatePublished(true) & this.updateTournee()}>\r\n                  Modifier\r\n                </button>\r\n              )}\r\n              </div>\r\n\r\n            </div>\r\n            <p>{currentTournee.published ? this.state.message : \" Enregistré !\"}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Veuillez sélectionner un élément de la liste...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport TourneeDataService from \"../services/tournee.service\";\r\n\r\nimport Tournee from \"./tournee.component\";\r\n\r\nexport default class TourneesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveTournee = this.setActiveTournee.bind(this);\r\n    this.onDataChange = this.onDataChange.bind(this);\r\n\r\n    this.state = {\r\n      tournees: [],\r\n      currentTournee: null,\r\n      currentIndex: -1,\r\n    };\r\n\r\n    this.unsubscribe = undefined;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = TourneeDataService.getAll().orderBy(\"date\", \"desc\").onSnapshot(this.onDataChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  onDataChange(items) {\r\n    let tournees = [];\r\n\r\n    items.forEach((item) => {\r\n      let id = item.id;\r\n      let data = item.data();\r\n      tournees.push({\r\n        id: id,\r\n        ville: data.ville,\r\n        date: data.date,\r\n        poids: data.poids,\r\n        total: data.total,\r\n        benevoles: data.benevoles,\r\n        remarques: data.remarques,\r\n        published: data.published,\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      tournees: tournees,\r\n    });\r\n  }\r\n\r\n  refreshList() {\r\n    this.setState({\r\n      currentTournee: null,\r\n      currentIndex: -1,\r\n    });\r\n  }\r\n\r\n  setActiveTournee(tournee, index) {\r\n    this.setState({\r\n      currentTournee: tournee,\r\n      currentIndex: index,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { tournees, currentTournee, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-6\">\r\n          <h4>Tournées</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {tournees &&\r\n              tournees.map((tournee, index) => (\r\n                <li\r\n                  className={ \"list-group-item \" + (index === currentIndex ? \"active\" : \"\") }\r\n                  onClick={() => this.setActiveTournee(tournee, index)}\r\n                  key={index}\r\n                >\r\n                  <b>{tournee.date}</b> <p>{tournee.ville}</p> <span className=\"total\">Total : {tournee.total} Kgs</span>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentTournee ? (\r\n            <Tournee\r\n              tournee={currentTournee}\r\n              refreshList={this.refreshList}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p className=\"lead\">Veuillez sélectionner un élément de la liste ...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddTournee from \"./components/add-tournee.component\";\nimport TourneesList from \"./components/tournees-list.component\";\n\nfunction App() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand fixed-top navbar-dark bg-dark\">\n        <a href=\"/\" className=\"navbar-brand\">\n          Pain2Vie\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/tournees\"} className=\"nav-link\">\n              LISTE\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/ajouter\"} className=\"nav-link\">\n              AJOUTER\n            </Link>\n          </li>\n        </div>\n      </nav>\n\n      <div className=\"container mt-4 lead\">\n        <span className=\"pain2vie-title\">\n          <h2>Association Pain2Vie Le Mans</h2>\n        </span>\n        <Switch>\n          <Route exact path={[\"/\", \"/tournees\"]} component={TourneesList} />\n          <Route exact path=\"/ajouter\" component={AddTournee} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service '\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all '\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n            headers: {\r\n                'Service-Worker': 'script'\r\n            },\r\n        })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}